{
    // Place your snippets for cpp here. Each snippet is defined under a snippet name and has a prefix, body and
    // description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
    // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the
    // same ids are connected.
    "Header commint": {
        "prefix": "header",
        "body": [
            "/*",
            "* @Author      : IceCory (icecory520@gmail.com)",
            "* @Copyright(C): GPL 3.0",
            "* @desc        :",
            "*/",
            "",
            "$0"
        ],
        "description": "Cpp header commint"
    },
    "cout": {
        "prefix": "sout",
        "body": [
            "std::cout << $0 << std::endl;"
        ],
        "description": "std cout"
    },
    "gcd": {
        "prefix": "GCD",
        "body": [
            "template <typename T>",
            "T gcd(T a, T b) { return b == 0 ? a : gcd(b, a % b); }"
        ],
        "description": "algorithm gcd"
    },
    "lcm": {
        "prefix": "LCM",
        "body": [
            "template <typename T>",
            "inline T lcm(T a, T b) { return a / gcd(a, b) * b; }"
        ],
        "description": "algorithm lcm"
    },
    "ln": {
        "prefix": "LN",
        "body": [
            "inline double ln(double const& x) { return log(x) / log(exp(1.0)); }"
        ],
        "description": "algorithm ln()"
    },
    "acm_debug": {
        "prefix": "acm_debug",
        "body": [
            "#ifdef TEST",
            "#include \"utils/define.h\"",
            "#else",
            "#define parse() ;",
            "#define pp(...) ;",
            "#endif",
        ],
        "description": "for acm debug"
    },
    "gtest": {
        "prefix": "gtest",
        "body": [
            "#include <gtest/gtest.h>",
            "int main(int argc, char* argv[]) {",
            "",
            "    testing::InitGoogleTest(&argc, argv);",
            "    return RUN_ALL_TESTS();",
            "}"
        ],
        "description": "for google-test"
    }
}
